pipeline {
    agent { label 'agent-mac' }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set up Python') {
            matrix {
                axes {
                    axis {
                        name 'PYTHON_VERSION'
                        values '3.12'
                    }
                }
                stages {
                    stage('Use Python Version') {
                        steps {
                            sh "python${PYTHON_VERSION} -m venv venv${PYTHON_VERSION}"
                            sh ". venv${PYTHON_VERSION}/bin/activate"
                            sh "venv${PYTHON_VERSION}/bin/python -m pip install --upgrade pip"
                            sh "venv${PYTHON_VERSION}/bin/pip install -r requirements.txt"
                        }
                    }
                }
            }
        }

        stage('Run API Tests and generate reports') {
            steps {
                sh """
                    . venv${PYTHON_VERSION}/bin/activate
                    pytest api/api_tests/ --json-report --json-report-file=api-test-results.json
                    deactivate
                """
            }
            post {
                always {
                    archiveArtifacts artifacts: 'api-test-results.json', fingerprint: true
                }
            }
        }

        stage('Upload Test Reports') {
            steps {
                archiveArtifacts artifacts: 'reports/*.xml', fingerprint: true
            }
        }
    }
}
