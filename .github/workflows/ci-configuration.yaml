name: Run Unit Testing

on: [push]

jobs:
  unit-testing:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unittests with nose2 and generate coverage report
        run: |
          nose2 -v --with-coverage
          coverage json -o coverage.json  # Generate JSON coverage report

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: "reports/*.xml"
      - name: Set coverage output variable
        run: |
          cat coverage.json 
          COVERAGE=$(python -c "import json; data = json.load(open('coverage.json')); print(data.get('totals', {}).get('percent_covered', 0))")
          echo "Extracted COVERAGE value: $COVERAGE"  # Add this line for debugging
          if [ -z "$COVERAGE" ]; then
            COVERAGE=0  # Set default value to 0 if coverage is not available
          fi
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
      
          # Extract the numeric value from COVERAGE using sed
          COVERAGE_NUMERIC=$(echo "$COVERAGE" | sed 's/"//g')
      
          COVERAGE_PERCENTAGE=$(printf "%.2f" "$COVERAGE_NUMERIC")
          echo "COVERAGE_PERCENTAGE=$COVERAGE_PERCENTAGE" >> $GITHUB_ENV
      
          if (( $(echo "$COVERAGE_PERCENTAGE < 85" | bc -l) )); then
            echo "COVERAGE_BADGE_COLOR=red" >> $GITHUB_ENV
          else
            echo "COVERAGE_BADGE_COLOR=brightgreen" >> $GITHUB_ENV
          fi
          echo "COVERAGE_BADGE_COLOR: $COVERAGE_BADGE_COLOR"

      - name: Create Test Results badge
        uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.COVERAGE_BADGE_COLOR }}
          path: tests-badge.svg

      - name: Create Coverage badge
        uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
        with:
          label: Coverage
          status: '${{ env.COVERAGE_PERCENTAGE }}%'
          color: ${{ env.COVERAGE_BADGE_COLOR }}
          path: coverage-badge.svg

      - name: Upload Tests Badge to Gist
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@6e8d64427fe47cbacf4ab6b890411f1d67c07f3e
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/safo-bora/fba1dd06d94a6c3166f557a425fc1c5c
          file: tests-badge.svg

      - name: Upload Coverage Badge to Gist
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@6e8d64427fe47cbacf4ab6b890411f1d67c07f3e
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/safo-bora/fba1dd06d94a6c3166f557a425fc1c5c
          file: coverage-badge.svg
